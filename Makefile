#############################################################################
# Makefile for building: dissent
# Generated by qmake (2.01a) (Qt 4.8.1) on: Wed Jul 18 04:51:36 2012
# Project:  application.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile application.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DVERSION=3 -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4 -Iext/joyent-http-parser -Iext/qt-json -Isrc -Iext/qxt -Isrc -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lcryptopp -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ext/joyent-http-parser/http_parser.c \
		ext/qt-json/json.cpp \
		ext/qxt/qxtcommandoptions.cpp \
		src/Anonymity/BaseBulkRound.cpp \
		src/Anonymity/BulkRound.cpp \
		src/Anonymity/CSBulkRound.cpp \
		src/Anonymity/Log.cpp \
		src/Anonymity/MessageRandomizer.cpp \
		src/Anonymity/NeffKeyShuffle.cpp \
		src/Anonymity/NullRound.cpp \
		src/Anonymity/RepeatingBulkRound.cpp \
		src/Anonymity/Round.cpp \
		src/Anonymity/Sessions/Session.cpp \
		src/Anonymity/Sessions/SessionLeader.cpp \
		src/Anonymity/Sessions/SessionManager.cpp \
		src/Anonymity/ShuffleBlamer.cpp \
		src/Anonymity/ShuffleRound.cpp \
		src/Anonymity/ShuffleRoundBlame.cpp \
		src/Anonymity/Tolerant/Accusation.cpp \
		src/Anonymity/Tolerant/AlibiData.cpp \
		src/Anonymity/Tolerant/BlameMatrix.cpp \
		src/Anonymity/Tolerant/MessageHistory.cpp \
		src/Anonymity/Tolerant/TolerantBulkRound.cpp \
		src/Applications/CommandLine.cpp \
		src/Applications/ConsoleSink.cpp \
		src/Applications/FileSink.cpp \
		src/Applications/Node.cpp \
		src/Applications/SessionFactory.cpp \
		src/Applications/Settings.cpp \
		src/ClientServer/CSBroadcast.cpp \
		src/ClientServer/CSConnectionAcquirer.cpp \
		src/ClientServer/CSForwarder.cpp \
		src/ClientServer/CSNetwork.cpp \
		src/ClientServer/CSOverlay.cpp \
		src/Connections/Bootstrapper.cpp \
		src/Connections/Connection.cpp \
		src/Connections/ConnectionManager.cpp \
		src/Connections/ConnectionTable.cpp \
		src/Connections/FullyConnected.cpp \
		src/Connections/Id.cpp \
		src/Connections/RelayAddress.cpp \
		src/Connections/RelayEdge.cpp \
		src/Connections/RelayEdgeListener.cpp \
		src/Connections/RelayForwarder.cpp \
		src/Crypto/AsymmetricKey.cpp \
		src/Crypto/CppDiffieHellman.cpp \
		src/Crypto/CppDsaPrivateKey.cpp \
		src/Crypto/CppDsaPublicKey.cpp \
		src/Crypto/CppHash.cpp \
		src/Crypto/CppPrivateKey.cpp \
		src/Crypto/CppPublicKey.cpp \
		src/Crypto/CppRandom.cpp \
		src/Crypto/CryptoFactory.cpp \
		src/Crypto/DiffieHellman.cpp \
		src/Crypto/NullDiffieHellman.cpp \
		src/Crypto/NullHash.cpp \
		src/Crypto/NullPublicKey.cpp \
		src/Crypto/NullPrivateKey.cpp \
		src/Crypto/OnionEncryptor.cpp \
		src/Crypto/ThreadedOnionEncryptor.cpp \
		src/Identity/Group.cpp \
		src/Messaging/RpcHandler.cpp \
		src/Messaging/SignalSink.cpp \
		src/Overlay/BaseOverlay.cpp \
		src/Overlay/BasicGossip.cpp \
		src/PeerReview/AcknowledgementLog.cpp \
		src/PeerReview/Entry.cpp \
		src/PeerReview/EntryLog.cpp \
		src/PeerReview/EntryParser.cpp \
		src/PeerReview/PRManager.cpp \
		src/Transports/Address.cpp \
		src/Transports/AddressFactory.cpp \
		src/Transports/BufferAddress.cpp \
		src/Transports/BufferEdge.cpp \
		src/Transports/BufferEdgeListener.cpp \
		src/Transports/Edge.cpp \
		src/Transports/EdgeFactory.cpp \
		src/Transports/EdgeListener.cpp \
		src/Transports/EdgeListenerFactory.cpp \
		src/Transports/TcpAddress.cpp \
		src/Transports/TcpEdge.cpp \
		src/Transports/TcpEdgeListener.cpp \
		src/Tunnel/EntryTunnel.cpp \
		src/Tunnel/ExitTunnel.cpp \
		src/Tunnel/SocksConnection.cpp \
		src/Tunnel/SocksHostAddress.cpp \
		src/Tunnel/TunnelConnectionTable.cpp \
		src/Tunnel/Packets/Packet.cpp \
		src/Tunnel/Packets/FinishPacket.cpp \
		src/Tunnel/Packets/TcpRequestPacket.cpp \
		src/Tunnel/Packets/UdpRequestPacket.cpp \
		src/Tunnel/Packets/TcpResponsePacket.cpp \
		src/Tunnel/Packets/UdpResponsePacket.cpp \
		src/Tunnel/Packets/TcpStartPacket.cpp \
		src/Tunnel/Packets/UdpStartPacket.cpp \
		src/Utils/Logging.cpp \
		src/Utils/Random.cpp \
		src/Utils/Sleeper.cpp \
		src/Utils/StartStop.cpp \
		src/Utils/Time.cpp \
		src/Utils/Timer.cpp \
		src/Utils/TimerEvent.cpp \
		src/Utils/Utils.cpp \
		src/Web/HttpRequest.cpp \
		src/Web/HttpResponse.cpp \
		src/Web/WebRequest.cpp \
		src/Web/WebServer.cpp \
		src/Web/Packagers/JsonPackager.cpp \
		src/Web/Services/GetFileService.cpp \
		src/Web/Services/GetMessagesService.cpp \
		src/Web/Services/RoundIdService.cpp \
		src/Web/Services/SendMessageService.cpp \
		src/Web/Services/SessionIdService.cpp \
		src/Web/Services/WebService.cpp \
		src/Applications/Application.cpp moc_BaseBulkRound.cpp \
		moc_BulkRound.cpp \
		moc_CSBulkRound.cpp \
		moc_NeffKeyShuffle.cpp \
		moc_NullRound.cpp \
		moc_RepeatingBulkRound.cpp \
		moc_Round.cpp \
		moc_Session.cpp \
		moc_SessionLeader.cpp \
		moc_SessionManager.cpp \
		moc_ShuffleRound.cpp \
		moc_TolerantBulkRound.cpp \
		moc_CommandLine.cpp \
		moc_CSBroadcast.cpp \
		moc_CSConnectionAcquirer.cpp \
		moc_CSOverlay.cpp \
		moc_Bootstrapper.cpp \
		moc_Connection.cpp \
		moc_ConnectionAcquirer.cpp \
		moc_ConnectionManager.cpp \
		moc_FullyConnected.cpp \
		moc_RelayEdgeListener.cpp \
		moc_RelayForwarder.cpp \
		moc_Group.cpp \
		moc_GroupHolder.cpp \
		moc_BufferSink.cpp \
		moc_RequestResponder.cpp \
		moc_RequestHandler.cpp \
		moc_ResponseHandler.cpp \
		moc_RpcHandler.cpp \
		moc_SignalSink.cpp \
		moc_SourceObject.cpp \
		moc_BaseOverlay.cpp \
		moc_Edge.cpp \
		moc_EdgeListener.cpp \
		moc_TcpEdge.cpp \
		moc_TcpEdgeListener.cpp \
		moc_EntryTunnel.cpp \
		moc_ExitTunnel.cpp \
		moc_SocksConnection.cpp \
		moc_SignalCounter.cpp \
		moc_StartStopSlots.cpp \
		moc_Timer.cpp \
		moc_HttpRequest.cpp \
		moc_HttpResponse.cpp \
		moc_WebRequest.cpp \
		moc_WebServer.cpp \
		moc_Packager.cpp \
		moc_JsonPackager.cpp \
		moc_MessageWebService.cpp \
		moc_WebService.cpp
OBJECTS       = http_parser.o \
		json.o \
		qxtcommandoptions.o \
		BaseBulkRound.o \
		BulkRound.o \
		CSBulkRound.o \
		Log.o \
		MessageRandomizer.o \
		NeffKeyShuffle.o \
		NullRound.o \
		RepeatingBulkRound.o \
		Round.o \
		Session.o \
		SessionLeader.o \
		SessionManager.o \
		ShuffleBlamer.o \
		ShuffleRound.o \
		ShuffleRoundBlame.o \
		Accusation.o \
		AlibiData.o \
		BlameMatrix.o \
		MessageHistory.o \
		TolerantBulkRound.o \
		CommandLine.o \
		ConsoleSink.o \
		FileSink.o \
		Node.o \
		SessionFactory.o \
		Settings.o \
		CSBroadcast.o \
		CSConnectionAcquirer.o \
		CSForwarder.o \
		CSNetwork.o \
		CSOverlay.o \
		Bootstrapper.o \
		Connection.o \
		ConnectionManager.o \
		ConnectionTable.o \
		FullyConnected.o \
		Id.o \
		RelayAddress.o \
		RelayEdge.o \
		RelayEdgeListener.o \
		RelayForwarder.o \
		AsymmetricKey.o \
		CppDiffieHellman.o \
		CppDsaPrivateKey.o \
		CppDsaPublicKey.o \
		CppHash.o \
		CppPrivateKey.o \
		CppPublicKey.o \
		CppRandom.o \
		CryptoFactory.o \
		DiffieHellman.o \
		NullDiffieHellman.o \
		NullHash.o \
		NullPublicKey.o \
		NullPrivateKey.o \
		OnionEncryptor.o \
		ThreadedOnionEncryptor.o \
		Group.o \
		RpcHandler.o \
		SignalSink.o \
		BaseOverlay.o \
		BasicGossip.o \
		AcknowledgementLog.o \
		Entry.o \
		EntryLog.o \
		EntryParser.o \
		PRManager.o \
		Address.o \
		AddressFactory.o \
		BufferAddress.o \
		BufferEdge.o \
		BufferEdgeListener.o \
		Edge.o \
		EdgeFactory.o \
		EdgeListener.o \
		EdgeListenerFactory.o \
		TcpAddress.o \
		TcpEdge.o \
		TcpEdgeListener.o \
		EntryTunnel.o \
		ExitTunnel.o \
		SocksConnection.o \
		SocksHostAddress.o \
		TunnelConnectionTable.o \
		Packet.o \
		FinishPacket.o \
		TcpRequestPacket.o \
		UdpRequestPacket.o \
		TcpResponsePacket.o \
		UdpResponsePacket.o \
		TcpStartPacket.o \
		UdpStartPacket.o \
		Logging.o \
		Random.o \
		Sleeper.o \
		StartStop.o \
		Time.o \
		Timer.o \
		TimerEvent.o \
		Utils.o \
		HttpRequest.o \
		HttpResponse.o \
		WebRequest.o \
		WebServer.o \
		JsonPackager.o \
		GetFileService.o \
		GetMessagesService.o \
		RoundIdService.o \
		SendMessageService.o \
		SessionIdService.o \
		WebService.o \
		Application.o \
		moc_BaseBulkRound.o \
		moc_BulkRound.o \
		moc_CSBulkRound.o \
		moc_NeffKeyShuffle.o \
		moc_NullRound.o \
		moc_RepeatingBulkRound.o \
		moc_Round.o \
		moc_Session.o \
		moc_SessionLeader.o \
		moc_SessionManager.o \
		moc_ShuffleRound.o \
		moc_TolerantBulkRound.o \
		moc_CommandLine.o \
		moc_CSBroadcast.o \
		moc_CSConnectionAcquirer.o \
		moc_CSOverlay.o \
		moc_Bootstrapper.o \
		moc_Connection.o \
		moc_ConnectionAcquirer.o \
		moc_ConnectionManager.o \
		moc_FullyConnected.o \
		moc_RelayEdgeListener.o \
		moc_RelayForwarder.o \
		moc_Group.o \
		moc_GroupHolder.o \
		moc_BufferSink.o \
		moc_RequestResponder.o \
		moc_RequestHandler.o \
		moc_ResponseHandler.o \
		moc_RpcHandler.o \
		moc_SignalSink.o \
		moc_SourceObject.o \
		moc_BaseOverlay.o \
		moc_Edge.o \
		moc_EdgeListener.o \
		moc_TcpEdge.o \
		moc_TcpEdgeListener.o \
		moc_EntryTunnel.o \
		moc_ExitTunnel.o \
		moc_SocksConnection.o \
		moc_SignalCounter.o \
		moc_StartStopSlots.o \
		moc_Timer.o \
		moc_HttpRequest.o \
		moc_HttpResponse.o \
		moc_WebRequest.o \
		moc_WebServer.o \
		moc_Packager.o \
		moc_JsonPackager.o \
		moc_MessageWebService.o \
		moc_WebService.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		dissent.pro \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		application.pro
QMAKE_TARGET  = dissent
DESTDIR       = 
TARGET        = dissent

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: application.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		dissent.pro \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile application.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
dissent.pro:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile application.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/dissent1.0.0 || $(MKDIR) .tmp/dissent1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/dissent1.0.0/ && $(COPY_FILE) --parents ext/joyent-http-parser/http_parser.h ext/qt-json/json.h ext/qxt/qxtcommandoptions.h ext/qxt/qxtglobal.h src/Dissent.hpp src/Anonymity/BaseBulkRound.hpp src/Anonymity/BulkRound.hpp src/Anonymity/CSBulkRound.hpp src/Anonymity/Log.hpp src/Anonymity/MessageRandomizer.hpp src/Anonymity/NeffKeyShuffle.hpp src/Anonymity/NullRound.hpp src/Anonymity/RepeatingBulkRound.hpp src/Anonymity/Round.hpp src/Anonymity/RoundStateMachine.hpp src/Anonymity/Sessions/Session.hpp src/Anonymity/Sessions/SessionLeader.hpp src/Anonymity/Sessions/SessionManager.hpp src/Anonymity/ShuffleBlamer.hpp src/Anonymity/ShuffleRound.hpp src/Anonymity/ShuffleRoundBlame.hpp src/Anonymity/Tolerant/Accusation.hpp src/Anonymity/Tolerant/AlibiData.hpp src/Anonymity/Tolerant/BlameMatrix.hpp src/Anonymity/Tolerant/Conflict.hpp src/Anonymity/Tolerant/MessageHistory.hpp src/Anonymity/Tolerant/TolerantBulkRound.hpp src/Applications/CommandLine.hpp src/Applications/ConsoleSink.hpp src/Applications/FileSink.hpp src/Applications/Node.hpp src/Applications/SessionFactory.hpp src/Applications/Settings.hpp src/ClientServer/CSBroadcast.hpp src/ClientServer/CSConnectionAcquirer.hpp src/ClientServer/CSForwarder.hpp src/ClientServer/CSNetwork.hpp src/ClientServer/CSOverlay.hpp src/Connections/Bootstrapper.hpp src/Connections/Connection.hpp src/Connections/ConnectionAcquirer.hpp src/Connections/ConnectionManager.hpp src/Connections/ConnectionTable.hpp src/Connections/DefaultNetwork.hpp src/Connections/EmptyNetwork.hpp src/Connections/ForwardingSender.hpp src/Connections/FullyConnected.hpp src/Connections/Id.hpp src/Connections/IOverlaySender.hpp src/Connections/Network.hpp src/Connections/RelayAddress.hpp src/Connections/RelayEdge.hpp src/Connections/RelayEdgeListener.hpp src/Connections/RelayForwarder.hpp src/Crypto/AsymmetricKey.hpp src/Crypto/CppDiffieHellman.hpp src/Crypto/CppDsaPrivateKey.hpp src/Crypto/CppDsaPublicKey.hpp src/Crypto/CppHash.hpp src/Crypto/CppIntegerData.hpp src/Crypto/CppLibrary.hpp src/Crypto/CppPrivateKey.hpp src/Crypto/CppPublicKey.hpp src/Crypto/CppRandom.hpp src/Crypto/CryptoFactory.hpp src/Crypto/DiffieHellman.hpp src/Crypto/NullDiffieHellman.hpp src/Crypto/Hash.hpp src/Crypto/Integer.hpp src/Crypto/IntegerData.hpp src/Crypto/NullHash.hpp src/Crypto/NullLibrary.hpp src/Crypto/NullPublicKey.hpp src/Crypto/NullPrivateKey.hpp src/Crypto/Library.hpp src/Crypto/OnionEncryptor.hpp src/Crypto/ThreadedOnionEncryptor.hpp src/Crypto/Serialization.hpp src/Identity/Authentication/IAuthenticate.hpp src/Identity/Authentication/IAuthenticator.hpp src/Identity/Authentication/NullAuthenticate.hpp src/Identity/Authentication/NullAuthenticator.hpp src/Identity/Group.hpp src/Identity/GroupHolder.hpp src/Identity/PrivateIdentity.hpp src/Identity/PublicIdentity.hpp src/Messaging/BufferSink.hpp src/Messaging/DummySink.hpp src/Messaging/Filter.hpp src/Messaging/FilterObject.hpp src/Messaging/GetDataCallback.hpp src/Messaging/ISender.hpp src/Messaging/ISink.hpp src/Messaging/ISinkObject.hpp src/Messaging/Request.hpp src/Messaging/RequestResponder.hpp src/Messaging/RequestHandler.hpp src/Messaging/Response.hpp src/Messaging/ResponseHandler.hpp src/Messaging/RpcHandler.hpp src/Messaging/SignalSink.hpp src/Messaging/Source.hpp src/Messaging/SourceObject.hpp src/Overlay/BaseOverlay.hpp src/Overlay/BasicGossip.hpp src/PeerReview/Acknowledgement.hpp src/PeerReview/AcknowledgementLog.hpp src/PeerReview/Entry.hpp src/PeerReview/EntryParser.hpp src/PeerReview/EntryLog.hpp src/PeerReview/SendEntry.hpp src/PeerReview/PRManager.hpp src/PeerReview/ReceiveEntry.hpp src/Transports/Address.hpp src/Transports/AddressFactory.hpp src/Transports/BufferAddress.hpp src/Transports/BufferEdge.hpp src/Transports/BufferEdgeListener.hpp src/Transports/Edge.hpp src/Transports/EdgeFactory.hpp src/Transports/EdgeListener.hpp src/Transports/EdgeListenerFactory.hpp src/Transports/TcpAddress.hpp src/Transports/TcpEdge.hpp src/Transports/TcpEdgeListener.hpp src/Tunnel/EntryTunnel.hpp src/Tunnel/ExitTunnel.hpp src/Tunnel/SocksConnection.hpp src/Tunnel/SocksHostAddress.hpp src/Tunnel/TunnelConnectionTable.hpp src/Tunnel/Packets/Packet.hpp src/Tunnel/Packets/FinishPacket.hpp src/Tunnel/Packets/TcpRequestPacket.hpp src/Tunnel/Packets/UdpRequestPacket.hpp src/Tunnel/Packets/TcpResponsePacket.hpp src/Tunnel/Packets/UdpResponsePacket.hpp src/Tunnel/Packets/TcpStartPacket.hpp src/Tunnel/Packets/UdpStartPacket.hpp src/Utils/Logging.hpp src/Utils/Random.hpp src/Utils/QRunTimeError.hpp src/Utils/Serialization.hpp src/Utils/SignalCounter.hpp src/Utils/Sleeper.hpp src/Utils/StartStop.hpp src/Utils/StartStopSlots.hpp src/Utils/Time.hpp src/Utils/Timer.hpp src/Utils/TimerCallback.hpp src/Utils/TimerEvent.hpp src/Utils/Triggerable.hpp src/Utils/Triple.hpp src/Utils/Utils.hpp src/Web/HttpRequest.hpp src/Web/HttpResponse.hpp src/Web/WebRequest.hpp src/Web/WebServer.hpp src/Web/Packagers/Packager.hpp src/Web/Packagers/JsonPackager.hpp src/Web/Services/GetFileService.hpp src/Web/Services/GetMessagesService.hpp src/Web/Services/MessageWebService.hpp src/Web/Services/RoundIdService.hpp src/Web/Services/SendMessageService.hpp src/Web/Services/SessionIdService.hpp src/Web/Services/SessionWebService.hpp src/Web/Services/WebService.hpp .tmp/dissent1.0.0/ && $(COPY_FILE) --parents ext/joyent-http-parser/http_parser.c ext/qt-json/json.cpp ext/qxt/qxtcommandoptions.cpp src/Anonymity/BaseBulkRound.cpp src/Anonymity/BulkRound.cpp src/Anonymity/CSBulkRound.cpp src/Anonymity/Log.cpp src/Anonymity/MessageRandomizer.cpp src/Anonymity/NeffKeyShuffle.cpp src/Anonymity/NullRound.cpp src/Anonymity/RepeatingBulkRound.cpp src/Anonymity/Round.cpp src/Anonymity/Sessions/Session.cpp src/Anonymity/Sessions/SessionLeader.cpp src/Anonymity/Sessions/SessionManager.cpp src/Anonymity/ShuffleBlamer.cpp src/Anonymity/ShuffleRound.cpp src/Anonymity/ShuffleRoundBlame.cpp src/Anonymity/Tolerant/Accusation.cpp src/Anonymity/Tolerant/AlibiData.cpp src/Anonymity/Tolerant/BlameMatrix.cpp src/Anonymity/Tolerant/MessageHistory.cpp src/Anonymity/Tolerant/TolerantBulkRound.cpp src/Applications/CommandLine.cpp src/Applications/ConsoleSink.cpp src/Applications/FileSink.cpp src/Applications/Node.cpp src/Applications/SessionFactory.cpp src/Applications/Settings.cpp src/ClientServer/CSBroadcast.cpp src/ClientServer/CSConnectionAcquirer.cpp src/ClientServer/CSForwarder.cpp src/ClientServer/CSNetwork.cpp src/ClientServer/CSOverlay.cpp src/Connections/Bootstrapper.cpp src/Connections/Connection.cpp src/Connections/ConnectionManager.cpp src/Connections/ConnectionTable.cpp src/Connections/FullyConnected.cpp src/Connections/Id.cpp src/Connections/RelayAddress.cpp src/Connections/RelayEdge.cpp src/Connections/RelayEdgeListener.cpp src/Connections/RelayForwarder.cpp src/Crypto/AsymmetricKey.cpp src/Crypto/CppDiffieHellman.cpp src/Crypto/CppDsaPrivateKey.cpp src/Crypto/CppDsaPublicKey.cpp src/Crypto/CppHash.cpp src/Crypto/CppPrivateKey.cpp src/Crypto/CppPublicKey.cpp src/Crypto/CppRandom.cpp src/Crypto/CryptoFactory.cpp src/Crypto/DiffieHellman.cpp src/Crypto/NullDiffieHellman.cpp src/Crypto/NullHash.cpp src/Crypto/NullPublicKey.cpp src/Crypto/NullPrivateKey.cpp src/Crypto/OnionEncryptor.cpp src/Crypto/ThreadedOnionEncryptor.cpp src/Identity/Group.cpp src/Messaging/RpcHandler.cpp src/Messaging/SignalSink.cpp src/Overlay/BaseOverlay.cpp src/Overlay/BasicGossip.cpp src/PeerReview/AcknowledgementLog.cpp src/PeerReview/Entry.cpp src/PeerReview/EntryLog.cpp src/PeerReview/EntryParser.cpp src/PeerReview/PRManager.cpp src/Transports/Address.cpp src/Transports/AddressFactory.cpp src/Transports/BufferAddress.cpp src/Transports/BufferEdge.cpp src/Transports/BufferEdgeListener.cpp src/Transports/Edge.cpp src/Transports/EdgeFactory.cpp src/Transports/EdgeListener.cpp src/Transports/EdgeListenerFactory.cpp src/Transports/TcpAddress.cpp src/Transports/TcpEdge.cpp src/Transports/TcpEdgeListener.cpp src/Tunnel/EntryTunnel.cpp src/Tunnel/ExitTunnel.cpp src/Tunnel/SocksConnection.cpp src/Tunnel/SocksHostAddress.cpp src/Tunnel/TunnelConnectionTable.cpp src/Tunnel/Packets/Packet.cpp src/Tunnel/Packets/FinishPacket.cpp src/Tunnel/Packets/TcpRequestPacket.cpp src/Tunnel/Packets/UdpRequestPacket.cpp src/Tunnel/Packets/TcpResponsePacket.cpp src/Tunnel/Packets/UdpResponsePacket.cpp src/Tunnel/Packets/TcpStartPacket.cpp src/Tunnel/Packets/UdpStartPacket.cpp src/Utils/Logging.cpp src/Utils/Random.cpp src/Utils/Sleeper.cpp src/Utils/StartStop.cpp src/Utils/Time.cpp src/Utils/Timer.cpp src/Utils/TimerEvent.cpp src/Utils/Utils.cpp src/Web/HttpRequest.cpp src/Web/HttpResponse.cpp src/Web/WebRequest.cpp src/Web/WebServer.cpp src/Web/Packagers/JsonPackager.cpp src/Web/Services/GetFileService.cpp src/Web/Services/GetMessagesService.cpp src/Web/Services/RoundIdService.cpp src/Web/Services/SendMessageService.cpp src/Web/Services/SessionIdService.cpp src/Web/Services/WebService.cpp src/Applications/Application.cpp .tmp/dissent1.0.0/ && (cd `dirname .tmp/dissent1.0.0` && $(TAR) dissent1.0.0.tar dissent1.0.0 && $(COMPRESS) dissent1.0.0.tar) && $(MOVE) `dirname .tmp/dissent1.0.0`/dissent1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/dissent1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_BaseBulkRound.cpp moc_BulkRound.cpp moc_CSBulkRound.cpp moc_NeffKeyShuffle.cpp moc_NullRound.cpp moc_RepeatingBulkRound.cpp moc_Round.cpp moc_Session.cpp moc_SessionLeader.cpp moc_SessionManager.cpp moc_ShuffleRound.cpp moc_TolerantBulkRound.cpp moc_CommandLine.cpp moc_CSBroadcast.cpp moc_CSConnectionAcquirer.cpp moc_CSOverlay.cpp moc_Bootstrapper.cpp moc_Connection.cpp moc_ConnectionAcquirer.cpp moc_ConnectionManager.cpp moc_FullyConnected.cpp moc_RelayEdgeListener.cpp moc_RelayForwarder.cpp moc_Group.cpp moc_GroupHolder.cpp moc_BufferSink.cpp moc_RequestResponder.cpp moc_RequestHandler.cpp moc_ResponseHandler.cpp moc_RpcHandler.cpp moc_SignalSink.cpp moc_SourceObject.cpp moc_BaseOverlay.cpp moc_Edge.cpp moc_EdgeListener.cpp moc_TcpEdge.cpp moc_TcpEdgeListener.cpp moc_EntryTunnel.cpp moc_ExitTunnel.cpp moc_SocksConnection.cpp moc_SignalCounter.cpp moc_StartStopSlots.cpp moc_Timer.cpp moc_HttpRequest.cpp moc_HttpResponse.cpp moc_WebRequest.cpp moc_WebServer.cpp moc_Packager.cpp moc_JsonPackager.cpp moc_MessageWebService.cpp moc_WebService.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_BaseBulkRound.cpp moc_BulkRound.cpp moc_CSBulkRound.cpp moc_NeffKeyShuffle.cpp moc_NullRound.cpp moc_RepeatingBulkRound.cpp moc_Round.cpp moc_Session.cpp moc_SessionLeader.cpp moc_SessionManager.cpp moc_ShuffleRound.cpp moc_TolerantBulkRound.cpp moc_CommandLine.cpp moc_CSBroadcast.cpp moc_CSConnectionAcquirer.cpp moc_CSOverlay.cpp moc_Bootstrapper.cpp moc_Connection.cpp moc_ConnectionAcquirer.cpp moc_ConnectionManager.cpp moc_FullyConnected.cpp moc_RelayEdgeListener.cpp moc_RelayForwarder.cpp moc_Group.cpp moc_GroupHolder.cpp moc_BufferSink.cpp moc_RequestResponder.cpp moc_RequestHandler.cpp moc_ResponseHandler.cpp moc_RpcHandler.cpp moc_SignalSink.cpp moc_SourceObject.cpp moc_BaseOverlay.cpp moc_Edge.cpp moc_EdgeListener.cpp moc_TcpEdge.cpp moc_TcpEdgeListener.cpp moc_EntryTunnel.cpp moc_ExitTunnel.cpp moc_SocksConnection.cpp moc_SignalCounter.cpp moc_StartStopSlots.cpp moc_Timer.cpp moc_HttpRequest.cpp moc_HttpResponse.cpp moc_WebRequest.cpp moc_WebServer.cpp moc_Packager.cpp moc_JsonPackager.cpp moc_MessageWebService.cpp moc_WebService.cpp
moc_BaseBulkRound.cpp: src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/BaseBulkRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/BaseBulkRound.hpp -o moc_BaseBulkRound.cpp

moc_BulkRound.cpp: src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/BulkRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/BulkRound.hpp -o moc_BulkRound.cpp

moc_CSBulkRound.cpp: src/Anonymity/RoundStateMachine.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/BaseBulkRound.hpp \
		src/Anonymity/CSBulkRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/CSBulkRound.hpp -o moc_CSBulkRound.cpp

moc_NeffKeyShuffle.cpp: src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/NeffKeyShuffle.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/NeffKeyShuffle.hpp -o moc_NeffKeyShuffle.cpp

moc_NullRound.cpp: src/Anonymity/Round.hpp \
		src/Anonymity/NullRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/NullRound.hpp -o moc_NullRound.cpp

moc_RepeatingBulkRound.cpp: src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RepeatingBulkRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/RepeatingBulkRound.hpp -o moc_RepeatingBulkRound.cpp

moc_Round.cpp: src/Anonymity/Round.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/Round.hpp -o moc_Round.cpp

moc_Session.cpp: src/Anonymity/Sessions/Session.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/Sessions/Session.hpp -o moc_Session.cpp

moc_SessionLeader.cpp: src/Anonymity/Sessions/Session.hpp \
		src/Anonymity/Sessions/SessionLeader.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/Sessions/SessionLeader.hpp -o moc_SessionLeader.cpp

moc_SessionManager.cpp: src/Anonymity/Sessions/SessionManager.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/Sessions/SessionManager.hpp -o moc_SessionManager.cpp

moc_ShuffleRound.cpp: src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp \
		src/Anonymity/ShuffleRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/ShuffleRound.hpp -o moc_ShuffleRound.cpp

moc_TolerantBulkRound.cpp: src/Anonymity/Tolerant/Accusation.hpp \
		src/Anonymity/Tolerant/AlibiData.hpp \
		src/Anonymity/Tolerant/Conflict.hpp \
		src/Anonymity/Tolerant/MessageHistory.hpp \
		src/Anonymity/Tolerant/TolerantBulkRound.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Anonymity/Tolerant/TolerantBulkRound.hpp -o moc_TolerantBulkRound.cpp

moc_CommandLine.cpp: src/Applications/ConsoleSink.hpp \
		src/Applications/CommandLine.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Applications/CommandLine.hpp -o moc_CommandLine.cpp

moc_CSBroadcast.cpp: src/ClientServer/CSForwarder.hpp \
		src/ClientServer/CSBroadcast.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/ClientServer/CSBroadcast.hpp -o moc_CSBroadcast.cpp

moc_CSConnectionAcquirer.cpp: src/ClientServer/CSConnectionAcquirer.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/ClientServer/CSConnectionAcquirer.hpp -o moc_CSConnectionAcquirer.cpp

moc_CSOverlay.cpp: src/ClientServer/CSConnectionAcquirer.hpp \
		src/ClientServer/CSOverlay.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/ClientServer/CSOverlay.hpp -o moc_CSOverlay.cpp

moc_Bootstrapper.cpp: src/Connections/ConnectionAcquirer.hpp \
		src/Connections/ConnectionManager.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/Bootstrapper.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/Bootstrapper.hpp -o moc_Bootstrapper.cpp

moc_Connection.cpp: src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/Connection.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/Connection.hpp -o moc_Connection.cpp

moc_ConnectionAcquirer.cpp: src/Connections/ConnectionManager.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/ConnectionAcquirer.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/ConnectionAcquirer.hpp -o moc_ConnectionAcquirer.cpp

moc_ConnectionManager.cpp: src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/ConnectionManager.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/ConnectionManager.hpp -o moc_ConnectionManager.cpp

moc_FullyConnected.cpp: src/Connections/ConnectionAcquirer.hpp \
		src/Connections/ConnectionManager.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/RelayEdgeListener.hpp \
		src/Connections/RelayAddress.hpp \
		src/Connections/RelayEdge.hpp \
		src/Connections/RelayForwarder.hpp \
		src/Connections/FullyConnected.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/FullyConnected.hpp -o moc_FullyConnected.cpp

moc_RelayEdgeListener.cpp: src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/RelayAddress.hpp \
		src/Connections/RelayEdge.hpp \
		src/Connections/RelayForwarder.hpp \
		src/Connections/RelayEdgeListener.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/RelayEdgeListener.hpp -o moc_RelayEdgeListener.cpp

moc_RelayForwarder.cpp: src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/RelayForwarder.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Connections/RelayForwarder.hpp -o moc_RelayForwarder.cpp

moc_Group.cpp: src/Identity/PublicIdentity.hpp \
		src/Identity/Group.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Identity/Group.hpp -o moc_Group.cpp

moc_GroupHolder.cpp: src/Identity/Group.hpp \
		src/Identity/PublicIdentity.hpp \
		src/Identity/GroupHolder.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Identity/GroupHolder.hpp -o moc_GroupHolder.cpp

moc_BufferSink.cpp: src/Messaging/ISinkObject.hpp \
		src/Messaging/ISink.hpp \
		src/Messaging/ISender.hpp \
		src/Messaging/BufferSink.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/BufferSink.hpp -o moc_BufferSink.cpp

moc_RequestResponder.cpp: src/Messaging/Response.hpp \
		src/Messaging/ISender.hpp \
		src/Messaging/RequestResponder.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/RequestResponder.hpp -o moc_RequestResponder.cpp

moc_RequestHandler.cpp: src/Messaging/RequestHandler.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/RequestHandler.hpp -o moc_RequestHandler.cpp

moc_ResponseHandler.cpp: src/Messaging/ResponseHandler.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/ResponseHandler.hpp -o moc_ResponseHandler.cpp

moc_RpcHandler.cpp: src/Messaging/ISender.hpp \
		src/Messaging/ISinkObject.hpp \
		src/Messaging/ISink.hpp \
		src/Messaging/Request.hpp \
		src/Messaging/RequestResponder.hpp \
		src/Messaging/Response.hpp \
		src/Messaging/RequestHandler.hpp \
		src/Messaging/ResponseHandler.hpp \
		src/Messaging/RpcHandler.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/RpcHandler.hpp -o moc_RpcHandler.cpp

moc_SignalSink.cpp: src/Messaging/ISender.hpp \
		src/Messaging/ISinkObject.hpp \
		src/Messaging/ISink.hpp \
		src/Messaging/SignalSink.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/SignalSink.hpp -o moc_SignalSink.cpp

moc_SourceObject.cpp: src/Messaging/ISink.hpp \
		src/Messaging/ISender.hpp \
		src/Messaging/Source.hpp \
		src/Messaging/SourceObject.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Messaging/SourceObject.hpp -o moc_SourceObject.cpp

moc_BaseOverlay.cpp: src/Overlay/BaseOverlay.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Overlay/BaseOverlay.hpp -o moc_BaseOverlay.cpp

moc_Edge.cpp: src/Transports/Address.hpp \
		src/Transports/Edge.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Transports/Edge.hpp -o moc_Edge.cpp

moc_EdgeListener.cpp: src/Transports/Edge.hpp \
		src/Transports/Address.hpp \
		src/Transports/EdgeListener.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Transports/EdgeListener.hpp -o moc_EdgeListener.cpp

moc_TcpEdge.cpp: src/Transports/Edge.hpp \
		src/Transports/Address.hpp \
		src/Transports/TcpAddress.hpp \
		src/Transports/TcpEdge.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Transports/TcpEdge.hpp -o moc_TcpEdge.cpp

moc_TcpEdgeListener.cpp: src/Transports/TcpAddress.hpp \
		src/Transports/Address.hpp \
		src/Transports/TcpEdge.hpp \
		src/Transports/Edge.hpp \
		src/Transports/EdgeListener.hpp \
		src/Transports/TcpEdgeListener.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Transports/TcpEdgeListener.hpp -o moc_TcpEdgeListener.cpp

moc_EntryTunnel.cpp: src/Tunnel/SocksConnection.hpp \
		src/Tunnel/SocksHostAddress.hpp \
		src/Tunnel/TunnelConnectionTable.hpp \
		src/Tunnel/EntryTunnel.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Tunnel/EntryTunnel.hpp -o moc_EntryTunnel.cpp

moc_ExitTunnel.cpp: src/Tunnel/ExitTunnel.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Tunnel/ExitTunnel.hpp -o moc_ExitTunnel.cpp

moc_SocksConnection.cpp: src/Tunnel/SocksHostAddress.hpp \
		src/Tunnel/SocksConnection.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Tunnel/SocksConnection.hpp -o moc_SocksConnection.cpp

moc_SignalCounter.cpp: src/Utils/SignalCounter.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Utils/SignalCounter.hpp -o moc_SignalCounter.cpp

moc_StartStopSlots.cpp: src/Utils/StartStop.hpp \
		src/Utils/StartStopSlots.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Utils/StartStopSlots.hpp -o moc_StartStopSlots.cpp

moc_Timer.cpp: src/Utils/TimerCallback.hpp \
		src/Utils/Time.hpp \
		src/Utils/TimerEvent.hpp \
		src/Utils/Timer.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Utils/Timer.hpp -o moc_Timer.cpp

moc_HttpRequest.cpp: src/Web/HttpRequest.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/HttpRequest.hpp -o moc_HttpRequest.cpp

moc_HttpResponse.cpp: src/Web/HttpResponse.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/HttpResponse.hpp -o moc_HttpResponse.cpp

moc_WebRequest.cpp: src/Web/HttpRequest.hpp \
		src/Web/HttpResponse.hpp \
		src/Web/WebRequest.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/WebRequest.hpp -o moc_WebRequest.cpp

moc_WebServer.cpp: src/Web/Services/WebService.hpp \
		src/Web/WebServer.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/WebServer.hpp -o moc_WebServer.cpp

moc_Packager.cpp: src/Web/Packagers/Packager.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/Packagers/Packager.hpp -o moc_Packager.cpp

moc_JsonPackager.cpp: src/Web/Packagers/Packager.hpp \
		src/Web/Packagers/JsonPackager.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/Packagers/JsonPackager.hpp -o moc_JsonPackager.cpp

moc_MessageWebService.cpp: src/Web/Services/WebService.hpp \
		src/Web/Services/MessageWebService.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/Services/MessageWebService.hpp -o moc_MessageWebService.cpp

moc_WebService.cpp: src/Web/Services/WebService.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) src/Web/Services/WebService.hpp -o moc_WebService.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

http_parser.o: ext/joyent-http-parser/http_parser.c 
	$(CC) -c $(CFLAGS) $(INCPATH) -o http_parser.o ext/joyent-http-parser/http_parser.c

json.o: ext/qt-json/json.cpp ext/qt-json/json.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o json.o ext/qt-json/json.cpp

qxtcommandoptions.o: ext/qxt/qxtcommandoptions.cpp ext/qxt/qxtcommandoptions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qxtcommandoptions.o ext/qxt/qxtcommandoptions.cpp

BaseBulkRound.o: src/Anonymity/BaseBulkRound.cpp src/Anonymity/BaseBulkRound.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/BulkRound.hpp \
		src/Anonymity/ShuffleRound.hpp \
		src/Anonymity/RoundStateMachine.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseBulkRound.o src/Anonymity/BaseBulkRound.cpp

BulkRound.o: src/Anonymity/BulkRound.cpp src/Anonymity/BulkRound.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/ShuffleRound.hpp \
		src/Anonymity/RoundStateMachine.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BulkRound.o src/Anonymity/BulkRound.cpp

CSBulkRound.o: src/Anonymity/CSBulkRound.cpp src/Anonymity/NeffKeyShuffle.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/CSBulkRound.hpp \
		src/Anonymity/BaseBulkRound.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSBulkRound.o src/Anonymity/CSBulkRound.cpp

Log.o: src/Anonymity/Log.cpp src/Anonymity/Log.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Log.o src/Anonymity/Log.cpp

MessageRandomizer.o: src/Anonymity/MessageRandomizer.cpp src/Anonymity/MessageRandomizer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MessageRandomizer.o src/Anonymity/MessageRandomizer.cpp

NeffKeyShuffle.o: src/Anonymity/NeffKeyShuffle.cpp src/Anonymity/NeffKeyShuffle.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp \
		src/Anonymity/Log.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NeffKeyShuffle.o src/Anonymity/NeffKeyShuffle.cpp

NullRound.o: src/Anonymity/NullRound.cpp src/Anonymity/NullRound.hpp \
		src/Anonymity/Round.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NullRound.o src/Anonymity/NullRound.cpp

RepeatingBulkRound.o: src/Anonymity/RepeatingBulkRound.cpp src/Anonymity/RepeatingBulkRound.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/BulkRound.hpp \
		src/Anonymity/ShuffleRound.hpp \
		src/Anonymity/RoundStateMachine.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RepeatingBulkRound.o src/Anonymity/RepeatingBulkRound.cpp

Round.o: src/Anonymity/Round.cpp src/Anonymity/Round.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Round.o src/Anonymity/Round.cpp

Session.o: src/Anonymity/Sessions/Session.cpp src/Anonymity/Sessions/Session.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Session.o src/Anonymity/Sessions/Session.cpp

SessionLeader.o: src/Anonymity/Sessions/SessionLeader.cpp src/Anonymity/Sessions/SessionLeader.hpp \
		src/Anonymity/Sessions/Session.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SessionLeader.o src/Anonymity/Sessions/SessionLeader.cpp

SessionManager.o: src/Anonymity/Sessions/SessionManager.cpp src/Anonymity/Sessions/Session.hpp \
		src/Anonymity/Sessions/SessionLeader.hpp \
		src/Anonymity/Sessions/SessionManager.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SessionManager.o src/Anonymity/Sessions/SessionManager.cpp

ShuffleBlamer.o: src/Anonymity/ShuffleBlamer.cpp src/Anonymity/ShuffleBlamer.hpp \
		src/Anonymity/ShuffleRoundBlame.hpp \
		src/Anonymity/ShuffleRound.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ShuffleBlamer.o src/Anonymity/ShuffleBlamer.cpp

ShuffleRound.o: src/Anonymity/ShuffleRound.cpp src/Anonymity/ShuffleRound.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp \
		src/Anonymity/ShuffleBlamer.hpp \
		src/Anonymity/ShuffleRoundBlame.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ShuffleRound.o src/Anonymity/ShuffleRound.cpp

ShuffleRoundBlame.o: src/Anonymity/ShuffleRoundBlame.cpp src/Anonymity/ShuffleRoundBlame.hpp \
		src/Anonymity/ShuffleRound.hpp \
		src/Anonymity/Log.hpp \
		src/Anonymity/Round.hpp \
		src/Anonymity/RoundStateMachine.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ShuffleRoundBlame.o src/Anonymity/ShuffleRoundBlame.cpp

Accusation.o: src/Anonymity/Tolerant/Accusation.cpp src/Anonymity/Tolerant/Accusation.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Accusation.o src/Anonymity/Tolerant/Accusation.cpp

AlibiData.o: src/Anonymity/Tolerant/AlibiData.cpp src/Anonymity/Tolerant/AlibiData.hpp \
		src/Anonymity/Tolerant/Accusation.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AlibiData.o src/Anonymity/Tolerant/AlibiData.cpp

BlameMatrix.o: src/Anonymity/Tolerant/BlameMatrix.cpp src/Anonymity/Tolerant/BlameMatrix.hpp \
		src/Anonymity/Tolerant/Accusation.hpp \
		src/Anonymity/Tolerant/Conflict.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BlameMatrix.o src/Anonymity/Tolerant/BlameMatrix.cpp

MessageHistory.o: src/Anonymity/Tolerant/MessageHistory.cpp src/Anonymity/Tolerant/MessageHistory.hpp \
		src/Anonymity/Tolerant/Accusation.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MessageHistory.o src/Anonymity/Tolerant/MessageHistory.cpp

TolerantBulkRound.o: src/Anonymity/Tolerant/TolerantBulkRound.cpp src/Anonymity/Tolerant/TolerantBulkRound.hpp \
		src/Anonymity/Tolerant/Accusation.hpp \
		src/Anonymity/Tolerant/AlibiData.hpp \
		src/Anonymity/Tolerant/Conflict.hpp \
		src/Anonymity/Tolerant/MessageHistory.hpp \
		src/Anonymity/Tolerant/BlameMatrix.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TolerantBulkRound.o src/Anonymity/Tolerant/TolerantBulkRound.cpp

CommandLine.o: src/Applications/CommandLine.cpp src/Applications/CommandLine.hpp \
		src/Applications/ConsoleSink.hpp \
		src/Applications/Node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CommandLine.o src/Applications/CommandLine.cpp

ConsoleSink.o: src/Applications/ConsoleSink.cpp src/Applications/ConsoleSink.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ConsoleSink.o src/Applications/ConsoleSink.cpp

FileSink.o: src/Applications/FileSink.cpp src/Applications/FileSink.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FileSink.o src/Applications/FileSink.cpp

Node.o: src/Applications/Node.cpp src/Applications/Node.hpp \
		src/Applications/SessionFactory.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Node.o src/Applications/Node.cpp

SessionFactory.o: src/Applications/SessionFactory.cpp src/Applications/SessionFactory.hpp \
		src/Applications/Node.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SessionFactory.o src/Applications/SessionFactory.cpp

Settings.o: src/Applications/Settings.cpp src/Applications/Settings.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Settings.o src/Applications/Settings.cpp

CSBroadcast.o: src/ClientServer/CSBroadcast.cpp src/ClientServer/CSBroadcast.hpp \
		src/ClientServer/CSForwarder.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSBroadcast.o src/ClientServer/CSBroadcast.cpp

CSConnectionAcquirer.o: src/ClientServer/CSConnectionAcquirer.cpp src/ClientServer/CSConnectionAcquirer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSConnectionAcquirer.o src/ClientServer/CSConnectionAcquirer.cpp

CSForwarder.o: src/ClientServer/CSForwarder.cpp src/ClientServer/CSForwarder.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSForwarder.o src/ClientServer/CSForwarder.cpp

CSNetwork.o: src/ClientServer/CSNetwork.cpp src/ClientServer/CSNetwork.hpp \
		src/ClientServer/CSBroadcast.hpp \
		src/ClientServer/CSForwarder.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSNetwork.o src/ClientServer/CSNetwork.cpp

CSOverlay.o: src/ClientServer/CSOverlay.cpp src/ClientServer/CSOverlay.hpp \
		src/ClientServer/CSConnectionAcquirer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CSOverlay.o src/ClientServer/CSOverlay.cpp

Bootstrapper.o: src/Connections/Bootstrapper.cpp src/Connections/Bootstrapper.hpp \
		src/Connections/ConnectionAcquirer.hpp \
		src/Connections/ConnectionManager.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Bootstrapper.o src/Connections/Bootstrapper.cpp

Connection.o: src/Connections/Connection.cpp src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Connection.o src/Connections/Connection.cpp

ConnectionManager.o: src/Connections/ConnectionManager.cpp src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/ConnectionManager.hpp \
		src/Connections/ConnectionTable.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ConnectionManager.o src/Connections/ConnectionManager.cpp

ConnectionTable.o: src/Connections/ConnectionTable.cpp src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/NullConnection.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ConnectionTable.o src/Connections/ConnectionTable.cpp

FullyConnected.o: src/Connections/FullyConnected.cpp src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/FullyConnected.hpp \
		src/Connections/ConnectionAcquirer.hpp \
		src/Connections/ConnectionManager.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/RelayEdgeListener.hpp \
		src/Connections/RelayAddress.hpp \
		src/Connections/RelayEdge.hpp \
		src/Connections/RelayForwarder.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FullyConnected.o src/Connections/FullyConnected.cpp

Id.o: src/Connections/Id.cpp src/Connections/Id.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Id.o src/Connections/Id.cpp

RelayAddress.o: src/Connections/RelayAddress.cpp src/Connections/RelayAddress.hpp \
		src/Connections/Id.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RelayAddress.o src/Connections/RelayAddress.cpp

RelayEdge.o: src/Connections/RelayEdge.cpp src/Connections/RelayEdge.hpp \
		src/Connections/RelayForwarder.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RelayEdge.o src/Connections/RelayEdge.cpp

RelayEdgeListener.o: src/Connections/RelayEdgeListener.cpp src/Connections/RelayEdgeListener.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/RelayAddress.hpp \
		src/Connections/RelayEdge.hpp \
		src/Connections/RelayForwarder.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RelayEdgeListener.o src/Connections/RelayEdgeListener.cpp

RelayForwarder.o: src/Connections/RelayForwarder.cpp src/Connections/Connection.hpp \
		src/Connections/Id.hpp \
		src/Connections/IOverlaySender.hpp \
		src/Connections/ForwardingSender.hpp \
		src/Connections/RelayForwarder.hpp \
		src/Connections/ConnectionTable.hpp \
		src/Connections/RelayEdge.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RelayForwarder.o src/Connections/RelayForwarder.cpp

AsymmetricKey.o: src/Crypto/AsymmetricKey.cpp src/Crypto/AsymmetricKey.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AsymmetricKey.o src/Crypto/AsymmetricKey.cpp

CppDiffieHellman.o: src/Crypto/CppDiffieHellman.cpp src/Crypto/CppDiffieHellman.hpp \
		src/Crypto/DiffieHellman.hpp \
		src/Crypto/CppHash.hpp \
		src/Crypto/Hash.hpp \
		src/Crypto/CppIntegerData.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/Integer.hpp \
		src/Crypto/CryptoFactory.hpp \
		src/Crypto/OnionEncryptor.hpp \
		src/Crypto/Library.hpp \
		src/Crypto/IntegerData.hpp \
		src/Utils/Utils.hpp \
		src/Crypto/CppRandom.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppDiffieHellman.o src/Crypto/CppDiffieHellman.cpp

CppDsaPrivateKey.o: src/Crypto/CppDsaPrivateKey.cpp src/Crypto/CppDsaPrivateKey.hpp \
		src/Crypto/CppDsaPublicKey.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/Integer.hpp \
		src/Crypto/CryptoFactory.hpp \
		src/Crypto/OnionEncryptor.hpp \
		src/Crypto/Library.hpp \
		src/Crypto/DiffieHellman.hpp \
		src/Crypto/Hash.hpp \
		src/Crypto/IntegerData.hpp \
		src/Utils/Utils.hpp \
		src/Crypto/CppIntegerData.hpp \
		src/Crypto/CppRandom.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppDsaPrivateKey.o src/Crypto/CppDsaPrivateKey.cpp

CppDsaPublicKey.o: src/Crypto/CppDsaPublicKey.cpp src/Crypto/CppPublicKey.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/CppDsaPublicKey.hpp \
		src/Crypto/Integer.hpp \
		src/Crypto/CryptoFactory.hpp \
		src/Crypto/OnionEncryptor.hpp \
		src/Crypto/Library.hpp \
		src/Crypto/DiffieHellman.hpp \
		src/Crypto/Hash.hpp \
		src/Crypto/IntegerData.hpp \
		src/Utils/Utils.hpp \
		src/Crypto/CppDsaPrivateKey.hpp \
		src/Crypto/CppIntegerData.hpp \
		src/Crypto/CppRandom.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppDsaPublicKey.o src/Crypto/CppDsaPublicKey.cpp

CppHash.o: src/Crypto/CppHash.cpp src/Crypto/CppHash.hpp \
		src/Crypto/Hash.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppHash.o src/Crypto/CppHash.cpp

CppPrivateKey.o: src/Crypto/CppPrivateKey.cpp src/Crypto/CppPrivateKey.hpp \
		src/Crypto/CppPublicKey.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/CppRandom.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppPrivateKey.o src/Crypto/CppPrivateKey.cpp

CppPublicKey.o: src/Crypto/CppPublicKey.cpp src/Crypto/CppPublicKey.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/CppPrivateKey.hpp \
		src/Crypto/CppRandom.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppPublicKey.o src/Crypto/CppPublicKey.cpp

CppRandom.o: src/Crypto/CppRandom.cpp src/Crypto/CppRandom.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CppRandom.o src/Crypto/CppRandom.cpp

CryptoFactory.o: src/Crypto/CryptoFactory.cpp src/Crypto/CppLibrary.hpp \
		src/Crypto/CppDiffieHellman.hpp \
		src/Crypto/DiffieHellman.hpp \
		src/Crypto/CppHash.hpp \
		src/Crypto/Hash.hpp \
		src/Crypto/CppIntegerData.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/Integer.hpp \
		src/Crypto/CryptoFactory.hpp \
		src/Crypto/OnionEncryptor.hpp \
		src/Crypto/Library.hpp \
		src/Crypto/IntegerData.hpp \
		src/Utils/Utils.hpp \
		src/Crypto/CppRandom.hpp \
		src/Crypto/CppPrivateKey.hpp \
		src/Crypto/CppPublicKey.hpp \
		src/Crypto/CppDsaLibrary.hpp \
		src/Crypto/CppDsaPrivateKey.hpp \
		src/Crypto/CppDsaPublicKey.hpp \
		src/Crypto/NullLibrary.hpp \
		src/Crypto/NullDiffieHellman.hpp \
		src/Crypto/NullHash.hpp \
		src/Crypto/NullPrivateKey.hpp \
		src/Crypto/NullPublicKey.hpp \
		src/Crypto/ThreadedOnionEncryptor.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CryptoFactory.o src/Crypto/CryptoFactory.cpp

DiffieHellman.o: src/Crypto/DiffieHellman.cpp src/Crypto/DiffieHellman.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DiffieHellman.o src/Crypto/DiffieHellman.cpp

NullDiffieHellman.o: src/Crypto/NullDiffieHellman.cpp src/Crypto/NullDiffieHellman.hpp \
		src/Crypto/DiffieHellman.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NullDiffieHellman.o src/Crypto/NullDiffieHellman.cpp

NullHash.o: src/Crypto/NullHash.cpp src/Crypto/NullHash.hpp \
		src/Crypto/Hash.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NullHash.o src/Crypto/NullHash.cpp

NullPublicKey.o: src/Crypto/NullPublicKey.cpp src/Crypto/NullPublicKey.hpp \
		src/Crypto/AsymmetricKey.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NullPublicKey.o src/Crypto/NullPublicKey.cpp

NullPrivateKey.o: src/Crypto/NullPrivateKey.cpp src/Crypto/NullPrivateKey.hpp \
		src/Crypto/NullPublicKey.hpp \
		src/Crypto/AsymmetricKey.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o NullPrivateKey.o src/Crypto/NullPrivateKey.cpp

OnionEncryptor.o: src/Crypto/OnionEncryptor.cpp src/Crypto/OnionEncryptor.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/CryptoFactory.hpp \
		src/Crypto/Library.hpp \
		src/Crypto/DiffieHellman.hpp \
		src/Crypto/Hash.hpp \
		src/Crypto/IntegerData.hpp \
		src/Utils/Utils.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OnionEncryptor.o src/Crypto/OnionEncryptor.cpp

ThreadedOnionEncryptor.o: src/Crypto/ThreadedOnionEncryptor.cpp src/Crypto/ThreadedOnionEncryptor.hpp \
		src/Crypto/AsymmetricKey.hpp \
		src/Crypto/OnionEncryptor.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ThreadedOnionEncryptor.o src/Crypto/ThreadedOnionEncryptor.cpp

Group.o: src/Identity/Group.cpp src/Identity/Group.hpp \
		src/Identity/PublicIdentity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Group.o src/Identity/Group.cpp

RpcHandler.o: src/Messaging/RpcHandler.cpp src/Messaging/RpcHandler.hpp \
		src/Messaging/ISender.hpp \
		src/Messaging/ISinkObject.hpp \
		src/Messaging/ISink.hpp \
		src/Messaging/Request.hpp \
		src/Messaging/RequestResponder.hpp \
		src/Messaging/Response.hpp \
		src/Messaging/RequestHandler.hpp \
		src/Messaging/ResponseHandler.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RpcHandler.o src/Messaging/RpcHandler.cpp

SignalSink.o: src/Messaging/SignalSink.cpp src/Messaging/SignalSink.hpp \
		src/Messaging/ISender.hpp \
		src/Messaging/ISinkObject.hpp \
		src/Messaging/ISink.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SignalSink.o src/Messaging/SignalSink.cpp

BaseOverlay.o: src/Overlay/BaseOverlay.cpp src/Overlay/BaseOverlay.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseOverlay.o src/Overlay/BaseOverlay.cpp

BasicGossip.o: src/Overlay/BasicGossip.cpp src/Overlay/BasicGossip.hpp \
		src/Overlay/BaseOverlay.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BasicGossip.o src/Overlay/BasicGossip.cpp

AcknowledgementLog.o: src/PeerReview/AcknowledgementLog.cpp src/PeerReview/AcknowledgementLog.hpp \
		src/PeerReview/Acknowledgement.hpp \
		src/PeerReview/ReceiveEntry.hpp \
		src/PeerReview/Entry.hpp \
		src/PeerReview/SendEntry.hpp \
		src/PeerReview/EntryParser.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AcknowledgementLog.o src/PeerReview/AcknowledgementLog.cpp

Entry.o: src/PeerReview/Entry.cpp src/PeerReview/Entry.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Entry.o src/PeerReview/Entry.cpp

EntryLog.o: src/PeerReview/EntryLog.cpp src/PeerReview/EntryLog.hpp \
		src/PeerReview/Entry.hpp \
		src/PeerReview/EntryParser.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EntryLog.o src/PeerReview/EntryLog.cpp

EntryParser.o: src/PeerReview/EntryParser.cpp src/PeerReview/Acknowledgement.hpp \
		src/PeerReview/ReceiveEntry.hpp \
		src/PeerReview/Entry.hpp \
		src/PeerReview/SendEntry.hpp \
		src/PeerReview/EntryParser.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EntryParser.o src/PeerReview/EntryParser.cpp

PRManager.o: src/PeerReview/PRManager.cpp src/PeerReview/PRManager.hpp \
		src/PeerReview/AcknowledgementLog.hpp \
		src/PeerReview/Acknowledgement.hpp \
		src/PeerReview/ReceiveEntry.hpp \
		src/PeerReview/Entry.hpp \
		src/PeerReview/SendEntry.hpp \
		src/PeerReview/EntryLog.hpp \
		src/PeerReview/EntryParser.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PRManager.o src/PeerReview/PRManager.cpp

Address.o: src/Transports/Address.cpp src/Transports/Address.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Address.o src/Transports/Address.cpp

AddressFactory.o: src/Transports/AddressFactory.cpp src/Transports/AddressFactory.hpp \
		src/Transports/Address.hpp \
		src/Transports/BufferAddress.hpp \
		src/Transports/TcpAddress.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AddressFactory.o src/Transports/AddressFactory.cpp

BufferAddress.o: src/Transports/BufferAddress.cpp src/Transports/BufferAddress.hpp \
		src/Transports/Address.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BufferAddress.o src/Transports/BufferAddress.cpp

BufferEdge.o: src/Transports/BufferEdge.cpp src/Transports/BufferEdge.hpp \
		src/Transports/Edge.hpp \
		src/Transports/Address.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BufferEdge.o src/Transports/BufferEdge.cpp

BufferEdgeListener.o: src/Transports/BufferEdgeListener.cpp src/Transports/BufferEdgeListener.hpp \
		src/Transports/BufferAddress.hpp \
		src/Transports/Address.hpp \
		src/Transports/BufferEdge.hpp \
		src/Transports/Edge.hpp \
		src/Transports/EdgeListener.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BufferEdgeListener.o src/Transports/BufferEdgeListener.cpp

Edge.o: src/Transports/Edge.cpp src/Transports/Edge.hpp \
		src/Transports/Address.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Edge.o src/Transports/Edge.cpp

EdgeFactory.o: src/Transports/EdgeFactory.cpp src/Transports/EdgeFactory.hpp \
		src/Transports/Address.hpp \
		src/Transports/EdgeListener.hpp \
		src/Transports/Edge.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EdgeFactory.o src/Transports/EdgeFactory.cpp

EdgeListener.o: src/Transports/EdgeListener.cpp src/Transports/EdgeListener.hpp \
		src/Transports/Edge.hpp \
		src/Transports/Address.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EdgeListener.o src/Transports/EdgeListener.cpp

EdgeListenerFactory.o: src/Transports/EdgeListenerFactory.cpp src/Transports/EdgeListenerFactory.hpp \
		src/Transports/Address.hpp \
		src/Transports/EdgeListener.hpp \
		src/Transports/Edge.hpp \
		src/Transports/BufferEdgeListener.hpp \
		src/Transports/BufferAddress.hpp \
		src/Transports/BufferEdge.hpp \
		src/Transports/TcpEdgeListener.hpp \
		src/Transports/TcpAddress.hpp \
		src/Transports/TcpEdge.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EdgeListenerFactory.o src/Transports/EdgeListenerFactory.cpp

TcpAddress.o: src/Transports/TcpAddress.cpp src/Transports/TcpAddress.hpp \
		src/Transports/Address.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpAddress.o src/Transports/TcpAddress.cpp

TcpEdge.o: src/Transports/TcpEdge.cpp src/Transports/TcpEdge.hpp \
		src/Transports/Edge.hpp \
		src/Transports/Address.hpp \
		src/Transports/TcpAddress.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpEdge.o src/Transports/TcpEdge.cpp

TcpEdgeListener.o: src/Transports/TcpEdgeListener.cpp src/Transports/TcpEdgeListener.hpp \
		src/Transports/TcpAddress.hpp \
		src/Transports/Address.hpp \
		src/Transports/TcpEdge.hpp \
		src/Transports/Edge.hpp \
		src/Transports/EdgeListener.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpEdgeListener.o src/Transports/TcpEdgeListener.cpp

EntryTunnel.o: src/Tunnel/EntryTunnel.cpp src/Tunnel/EntryTunnel.hpp \
		src/Tunnel/SocksConnection.hpp \
		src/Tunnel/SocksHostAddress.hpp \
		src/Tunnel/TunnelConnectionTable.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EntryTunnel.o src/Tunnel/EntryTunnel.cpp

ExitTunnel.o: src/Tunnel/ExitTunnel.cpp src/Tunnel/ExitTunnel.hpp \
		src/Tunnel/SocksHostAddress.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ExitTunnel.o src/Tunnel/ExitTunnel.cpp

SocksConnection.o: src/Tunnel/SocksConnection.cpp src/Tunnel/SocksConnection.hpp \
		src/Tunnel/SocksHostAddress.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SocksConnection.o src/Tunnel/SocksConnection.cpp

SocksHostAddress.o: src/Tunnel/SocksHostAddress.cpp src/Tunnel/SocksHostAddress.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SocksHostAddress.o src/Tunnel/SocksHostAddress.cpp

TunnelConnectionTable.o: src/Tunnel/TunnelConnectionTable.cpp src/Tunnel/TunnelConnectionTable.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TunnelConnectionTable.o src/Tunnel/TunnelConnectionTable.cpp

Packet.o: src/Tunnel/Packets/Packet.cpp src/Tunnel/Packets/Packet.hpp \
		src/Tunnel/Packets/FinishPacket.hpp \
		src/Tunnel/Packets/TcpRequestPacket.hpp \
		src/Tunnel/Packets/UdpRequestPacket.hpp \
		src/Tunnel/Packets/TcpResponsePacket.hpp \
		src/Tunnel/Packets/UdpResponsePacket.hpp \
		src/Tunnel/Packets/TcpStartPacket.hpp \
		src/Tunnel/Packets/UdpStartPacket.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Packet.o src/Tunnel/Packets/Packet.cpp

FinishPacket.o: src/Tunnel/Packets/FinishPacket.cpp src/Tunnel/Packets/FinishPacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FinishPacket.o src/Tunnel/Packets/FinishPacket.cpp

TcpRequestPacket.o: src/Tunnel/Packets/TcpRequestPacket.cpp src/Tunnel/Packets/TcpRequestPacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpRequestPacket.o src/Tunnel/Packets/TcpRequestPacket.cpp

UdpRequestPacket.o: src/Tunnel/Packets/UdpRequestPacket.cpp src/Tunnel/Packets/UdpRequestPacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UdpRequestPacket.o src/Tunnel/Packets/UdpRequestPacket.cpp

TcpResponsePacket.o: src/Tunnel/Packets/TcpResponsePacket.cpp src/Tunnel/Packets/TcpResponsePacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpResponsePacket.o src/Tunnel/Packets/TcpResponsePacket.cpp

UdpResponsePacket.o: src/Tunnel/Packets/UdpResponsePacket.cpp src/Tunnel/Packets/UdpResponsePacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UdpResponsePacket.o src/Tunnel/Packets/UdpResponsePacket.cpp

TcpStartPacket.o: src/Tunnel/Packets/TcpStartPacket.cpp src/Tunnel/Packets/TcpStartPacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TcpStartPacket.o src/Tunnel/Packets/TcpStartPacket.cpp

UdpStartPacket.o: src/Tunnel/Packets/UdpStartPacket.cpp src/Tunnel/Packets/UdpStartPacket.hpp \
		src/Tunnel/Packets/Packet.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UdpStartPacket.o src/Tunnel/Packets/UdpStartPacket.cpp

Logging.o: src/Utils/Logging.cpp src/Utils/Logging.hpp \
		src/Utils/Time.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Logging.o src/Utils/Logging.cpp

Random.o: src/Utils/Random.cpp src/Utils/Random.hpp \
		src/Utils/Serialization.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Random.o src/Utils/Random.cpp

Sleeper.o: src/Utils/Sleeper.cpp src/Utils/Sleeper.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sleeper.o src/Utils/Sleeper.cpp

StartStop.o: src/Utils/StartStop.cpp src/Utils/StartStop.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o StartStop.o src/Utils/StartStop.cpp

Time.o: src/Utils/Time.cpp src/Utils/Time.hpp \
		src/Utils/Timer.hpp \
		src/Utils/TimerCallback.hpp \
		src/Utils/TimerEvent.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Time.o src/Utils/Time.cpp

Timer.o: src/Utils/Timer.cpp src/Utils/Sleeper.hpp \
		src/Utils/Timer.hpp \
		src/Utils/TimerCallback.hpp \
		src/Utils/Time.hpp \
		src/Utils/TimerEvent.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Timer.o src/Utils/Timer.cpp

TimerEvent.o: src/Utils/TimerEvent.cpp src/Utils/TimerEvent.hpp \
		src/Utils/Time.hpp \
		src/Utils/TimerCallback.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TimerEvent.o src/Utils/TimerEvent.cpp

Utils.o: src/Utils/Utils.cpp src/Utils/Utils.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Utils.o src/Utils/Utils.cpp

HttpRequest.o: src/Web/HttpRequest.cpp src/Web/HttpRequest.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HttpRequest.o src/Web/HttpRequest.cpp

HttpResponse.o: src/Web/HttpResponse.cpp src/Web/HttpResponse.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o HttpResponse.o src/Web/HttpResponse.cpp

WebRequest.o: src/Web/WebRequest.cpp src/Web/WebRequest.hpp \
		src/Web/HttpRequest.hpp \
		src/Web/HttpResponse.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WebRequest.o src/Web/WebRequest.cpp

WebServer.o: src/Web/WebServer.cpp src/Web/HttpRequest.hpp \
		src/Web/HttpResponse.hpp \
		src/Web/WebRequest.hpp \
		src/Web/WebServer.hpp \
		src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WebServer.o src/Web/WebServer.cpp

JsonPackager.o: src/Web/Packagers/JsonPackager.cpp src/Web/Packagers/JsonPackager.hpp \
		src/Web/Packagers/Packager.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o JsonPackager.o src/Web/Packagers/JsonPackager.cpp

GetFileService.o: src/Web/Services/GetFileService.cpp src/Web/Services/GetFileService.hpp \
		src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GetFileService.o src/Web/Services/GetFileService.cpp

GetMessagesService.o: src/Web/Services/GetMessagesService.cpp src/Web/Services/GetMessagesService.hpp \
		src/Web/Services/MessageWebService.hpp \
		src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o GetMessagesService.o src/Web/Services/GetMessagesService.cpp

RoundIdService.o: src/Web/Services/RoundIdService.cpp src/Web/Services/RoundIdService.hpp \
		src/Web/Services/SessionWebService.hpp \
		src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RoundIdService.o src/Web/Services/RoundIdService.cpp

SendMessageService.o: src/Web/Services/SendMessageService.cpp src/Web/Services/SendMessageService.hpp \
		src/Web/Services/SessionWebService.hpp \
		src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SendMessageService.o src/Web/Services/SendMessageService.cpp

SessionIdService.o: src/Web/Services/SessionIdService.cpp src/Web/Services/SessionIdService.hpp \
		src/Web/Services/SessionWebService.hpp \
		src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SessionIdService.o src/Web/Services/SessionIdService.cpp

WebService.o: src/Web/Services/WebService.cpp src/Web/Services/WebService.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WebService.o src/Web/Services/WebService.cpp

Application.o: src/Applications/Application.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Application.o src/Applications/Application.cpp

moc_BaseBulkRound.o: moc_BaseBulkRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_BaseBulkRound.o moc_BaseBulkRound.cpp

moc_BulkRound.o: moc_BulkRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_BulkRound.o moc_BulkRound.cpp

moc_CSBulkRound.o: moc_CSBulkRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CSBulkRound.o moc_CSBulkRound.cpp

moc_NeffKeyShuffle.o: moc_NeffKeyShuffle.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_NeffKeyShuffle.o moc_NeffKeyShuffle.cpp

moc_NullRound.o: moc_NullRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_NullRound.o moc_NullRound.cpp

moc_RepeatingBulkRound.o: moc_RepeatingBulkRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RepeatingBulkRound.o moc_RepeatingBulkRound.cpp

moc_Round.o: moc_Round.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Round.o moc_Round.cpp

moc_Session.o: moc_Session.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Session.o moc_Session.cpp

moc_SessionLeader.o: moc_SessionLeader.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SessionLeader.o moc_SessionLeader.cpp

moc_SessionManager.o: moc_SessionManager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SessionManager.o moc_SessionManager.cpp

moc_ShuffleRound.o: moc_ShuffleRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ShuffleRound.o moc_ShuffleRound.cpp

moc_TolerantBulkRound.o: moc_TolerantBulkRound.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_TolerantBulkRound.o moc_TolerantBulkRound.cpp

moc_CommandLine.o: moc_CommandLine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CommandLine.o moc_CommandLine.cpp

moc_CSBroadcast.o: moc_CSBroadcast.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CSBroadcast.o moc_CSBroadcast.cpp

moc_CSConnectionAcquirer.o: moc_CSConnectionAcquirer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CSConnectionAcquirer.o moc_CSConnectionAcquirer.cpp

moc_CSOverlay.o: moc_CSOverlay.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_CSOverlay.o moc_CSOverlay.cpp

moc_Bootstrapper.o: moc_Bootstrapper.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Bootstrapper.o moc_Bootstrapper.cpp

moc_Connection.o: moc_Connection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Connection.o moc_Connection.cpp

moc_ConnectionAcquirer.o: moc_ConnectionAcquirer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ConnectionAcquirer.o moc_ConnectionAcquirer.cpp

moc_ConnectionManager.o: moc_ConnectionManager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ConnectionManager.o moc_ConnectionManager.cpp

moc_FullyConnected.o: moc_FullyConnected.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_FullyConnected.o moc_FullyConnected.cpp

moc_RelayEdgeListener.o: moc_RelayEdgeListener.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RelayEdgeListener.o moc_RelayEdgeListener.cpp

moc_RelayForwarder.o: moc_RelayForwarder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RelayForwarder.o moc_RelayForwarder.cpp

moc_Group.o: moc_Group.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Group.o moc_Group.cpp

moc_GroupHolder.o: moc_GroupHolder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_GroupHolder.o moc_GroupHolder.cpp

moc_BufferSink.o: moc_BufferSink.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_BufferSink.o moc_BufferSink.cpp

moc_RequestResponder.o: moc_RequestResponder.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RequestResponder.o moc_RequestResponder.cpp

moc_RequestHandler.o: moc_RequestHandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RequestHandler.o moc_RequestHandler.cpp

moc_ResponseHandler.o: moc_ResponseHandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ResponseHandler.o moc_ResponseHandler.cpp

moc_RpcHandler.o: moc_RpcHandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_RpcHandler.o moc_RpcHandler.cpp

moc_SignalSink.o: moc_SignalSink.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SignalSink.o moc_SignalSink.cpp

moc_SourceObject.o: moc_SourceObject.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SourceObject.o moc_SourceObject.cpp

moc_BaseOverlay.o: moc_BaseOverlay.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_BaseOverlay.o moc_BaseOverlay.cpp

moc_Edge.o: moc_Edge.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Edge.o moc_Edge.cpp

moc_EdgeListener.o: moc_EdgeListener.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_EdgeListener.o moc_EdgeListener.cpp

moc_TcpEdge.o: moc_TcpEdge.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_TcpEdge.o moc_TcpEdge.cpp

moc_TcpEdgeListener.o: moc_TcpEdgeListener.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_TcpEdgeListener.o moc_TcpEdgeListener.cpp

moc_EntryTunnel.o: moc_EntryTunnel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_EntryTunnel.o moc_EntryTunnel.cpp

moc_ExitTunnel.o: moc_ExitTunnel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ExitTunnel.o moc_ExitTunnel.cpp

moc_SocksConnection.o: moc_SocksConnection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SocksConnection.o moc_SocksConnection.cpp

moc_SignalCounter.o: moc_SignalCounter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_SignalCounter.o moc_SignalCounter.cpp

moc_StartStopSlots.o: moc_StartStopSlots.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_StartStopSlots.o moc_StartStopSlots.cpp

moc_Timer.o: moc_Timer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Timer.o moc_Timer.cpp

moc_HttpRequest.o: moc_HttpRequest.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_HttpRequest.o moc_HttpRequest.cpp

moc_HttpResponse.o: moc_HttpResponse.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_HttpResponse.o moc_HttpResponse.cpp

moc_WebRequest.o: moc_WebRequest.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_WebRequest.o moc_WebRequest.cpp

moc_WebServer.o: moc_WebServer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_WebServer.o moc_WebServer.cpp

moc_Packager.o: moc_Packager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Packager.o moc_Packager.cpp

moc_JsonPackager.o: moc_JsonPackager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_JsonPackager.o moc_JsonPackager.cpp

moc_MessageWebService.o: moc_MessageWebService.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MessageWebService.o moc_MessageWebService.cpp

moc_WebService.o: moc_WebService.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_WebService.o moc_WebService.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

